services:
  # Base de datos PostgreSQL
  database:
    image: postgres:15-alpine
    container_name: pozos_database
    environment:
      POSTGRES_DB: gestion_pozos
      POSTGRES_USER: pozos_user
      POSTGRES_PASSWORD: pozos_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pozos_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pozos_user -d gestion_pozos"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pozos_backend
    environment:
      - NODE_ENV=production
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=gestion_pozos
      - DB_USER=pozos_user
      - DB_PASSWORD=pozos_password
    ports:
      - "3000:3000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - pozos_network
    volumes:
      - ./backend:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Angular
  frontend:
    build:
      context: ./frontend/gestion-pozos
      dockerfile: Dockerfile
    container_name: pozos_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - pozos_network

# Volumenes persistentes
volumes:
  postgres_data:
    driver: local

# Red personalizada
networks:
  pozos_network:
    driver: bridge
